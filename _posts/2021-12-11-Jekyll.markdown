---
layout: post
title:  "Git과 GitHub 알아보기"
date:   2021-12-10
description: About Git, GitHub, Commands
---
## 서론
Git/GitHub, 소프트웨어학부에 진학하기 전에는 한 번도 들어보지 못한
이름부터 굉장히 낯설고 생소했던 친구들이지만 최근에 들어서 매일매일
찾아 사용하는 친구들이지만 정확한 정의, 역할, 용도를 모르는 것 같아
Git/GitHub에 대하여 수업에 배운 내용 + 추가 조사한 내용으로 정리하고자 한다!

## Git은 무엇일까?
![](https://images.velog.io/images/aid_choi/post/493bc853-9898-45c6-aebd-bbd3079c0776/image.png)

> Git은 형상 관리 도구 중 하나로, 컴퓨터 파일의 변경사항을 추적하고 여러 명의 사용자들 간에 해당 파일들의 작업을 조율하기 위한 분산 버전 관리 시스템이다.

- Git은 소프트웨어 개발에서 소스 코드를 효과적으로 관리할 수 있도록 하는 무료, 공개 소프트웨어.
- Git은 프로젝트 폴더 내에서 작업을 기록하고, 버전 관리를 통해 체계적인 개발이 가능하도록 한다.
- Git 공식 홈페이지에서 더 자세한 설명이 가능함 -> https://discord.gg/mP4DEqHK

<br>

## Git의 장점은?!
이러한 Git을 장점을 중심으로 다시 간단하게 정리해보면
소스 코드를 따로 주고 받을 필요 없이, Git을 사용하면 동일한 하나의 프로젝트, 같은 파일을 여러 명의 사람들이 동시에 작업하는 병렬 개발을 가능하게 해준다는 것!
그렇다면 Git과 이름이 비슷한 GitHub는 과연 무엇일까? 같이 알아보도록 하자!
<br>
## GitHub란?
![](https://images.velog.io/images/aid_choi/post/39a695b9-bebc-4de1-9437-a9f7cc0d6446/image.png)
>GitHub는 분산 버전 관리 툴인 Git을 사용하는 프로젝트를 지원하는 웹 호스팅 서비스이다.

GitHub는 버전 관리와 협업을 위한 코드 웹 호스팅 플랫폼으로 시간과 장소에 구애받지 않고 협업 프로젝트를 진행할 수 있도록 도와주는 도우미의 역할을 해준다고 보면 편함.
<br>
<hr>
<br>

## GitHub를 한 번 이용해볼까?
GitHub를 이용하기 전, 자주 이용되는 간단한 용어를 정리해보면 다음과 같다.

1. Repository : 파일이나 디렉토리를 저장해두는 저장소를 말함.
2. Commit : 파일을 추가, 변경한 이력을 저장소에 기록, 저장하는 작업을 말함.
3. Push : Commit을 위해 추가, 변경한 내용을 원격 저장소에 업로드하는 작업을 말함.


#### 1. Repository 생성

![](https://images.velog.io/images/aid_choi/post/d3c3a23d-2daa-416e-b1a7-aa96a9dacf7a/image.png)
사진에서 오른쪽 상단의 초록색깔 New 버튼을 한 번 클릭해준다.
버튼을 클릭하게 되면 Repository 생성 화면으로 이동하게 된다.

![](https://images.velog.io/images/aid_choi/post/20fd02f9-0d71-40d4-89a1-77f0ac7e211b/image.png)
Repository 생성 화면에서 사용자가 원하는 저장소 이름 / 설명(선택) / 옵션 을 선택할 수 있음.

- 초기에는 무료 사용자는 Private를 이용할 수 없었지만 2019년 말부터 무료 사용자도 Private 옵션을 사용할 수 있도록 변경되면서 비공개 리포지토리 생성이 가능하게 됨.

#### 2. Git 초기 설정
Git이 컴퓨터에 설치했다면 사용자 이름과 사용자 이메일 주소를 설정하는 것으로 이용 준비를 할 수 있음.
> `git config --global user.name "사용자 이름"`
`git config --global user.email "사용자 이메일"`

위 두 개의 명령어를 차례대로 이용하여 Git을 이용한 프로젝트를 진행할 수 있음.

아래 설정들은 위 2가지 기본 설정 이후, 세부 정보라고 이해하면 편함.

1. `cd 폴더 경로`
GitHub 웹페이지의 저장소, 즉 원격저장소와 내 컴퓨터 내의 저장소인 로컬 저장소를 연결하기 위해서는 로컬 저장소를 만들 경로로 이동해야 하는데 이때 cd 명령어를 사용함.

2. `git init`
해당 프로젝트를 Git의 리포지토리로 만들기 위한 명령어라고 이해하면 됨.

3. `git remote add origin 원격 저장소 주소`
git remote는 원격 저장소를 관리하는 명령어임.
`git remote -v` 명령어를 통해서 현재 커넥트되어 있는 원격 저장소가 무엇인지 확인할 수 있음.

4. `git clone 저장소 주소`
GitHub에 리포지토리나 서버의 프로젝트를 그대로 내려받는 명령어임.
<br>
<hr>
<br>

초기에 Git과 GitHub를 이용하면서 많이 어려움을 겪었던 부분들을 다시 정리해본 포스팅이었음.

또한, 이러한 GitHub의 이용 역시 명령어로 이용하는 것이 아닌 간단한 버튼의 조작으로도 commit, push 등이 가능하게 도와주는 도구 역시 존재함!

아래는 필자가 애용하고 있는 GitHub Desktop 다운로드 주소인데 GitHub의 이용이 아직 미숙한 사람들에게 입문하기 좋은 프로그램이라고 생각하여 간단히 작성해 보았음.

![](https://images.velog.io/images/aid_choi/post/166956fa-d620-41e1-918c-4eb63ab904b2/image.png)

GitHub Desktop 공식 홈페이지 주소 : https://desktop.github.com/